@page "/casters"

@using SquidLeagueWebsite.UI.Data
@using SquidLeagueWebsite.Models.Entities
@using SquidLeagueWebsite.UI.Common.Utilities
@inject CasterService casterService

<div id="title">Casters</div>

@if (casters == null)
{
    <div class="textContent">
        <h3>Loading...</h3>
    </div>
}
else if (casters.Count() == 0)
{
    <div class="">
        <h3>There are no casters to display</h3>
    </div>
}
else
{
    foreach (var casterList in casterSplit)
    {
        <div class="cardContainer">
            <div class="caster">
                @foreach (var caster in casterList)
                {
                    <div class="casterCard">
                        <img class="casterCardImg" src="@caster.ProfilePicturePath">
                        <div class="casterContainer">
                            <h5><b>@caster.CasterName</b></h5>
                            @if (!string.IsNullOrEmpty(caster.Discord))
                            {
                                <p>
                                    <img src="Images/brandLogos/Discord/Discord-Logo-Color.svg" height=40px width=40px>
                                    @caster.Discord
                                </p>
                            }

                            <p>
                                @if (!string.IsNullOrEmpty(caster.Twitter))
                                {
                                    <a href="@caster.Twitter" target="_blank">
                                        <img src="Images/brandLogos/Twitter/Twitter Logos/Twitter_Logo_Blue/Twitter_Logo_Blue.svg" height=40px width=40px>
                                    </a>
                                }

                                @if (!string.IsNullOrEmpty(caster.Twitch))
                                {
                                    <a href="@caster.Twitch" target="_blank">
                                        <img src="Images/brandLogos/twitch.svg" height=30px width=30px>
                                    </a>
                                }

                                @if (!string.IsNullOrEmpty(caster.YouTube))
                                {
                                    <a href="@caster.YouTube" target="_blank">
                                        <img src="Images/brandLogos/Youtube/social/1024px/red/youtube_social_icon_red.png" height=25px>
                                    </a>
                                }
                            </p>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
}

@code {
    private IEnumerable<Caster> casters;

    private List<List<Caster>> casterSplit;

    protected override async Task OnInitializedAsync()
    {
        this.casters = casterService.GetAllCasters();
        this.SplitUpList();
    }

    protected void SplitUpList()
    {
        this.casterSplit = this.casters.SplitList(3);
    }
}
