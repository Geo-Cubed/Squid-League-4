@page "/"
@page "/home"

@using SquidLeagueWebsite.UI.Common.Utilities
@using SquidLeagueWebsite.UI.Common.Helpers
@using SquidLeagueWebsite.UI.Data
@inject HomeService homeService

@*<PageTitle Title="Squid League - Home"></PageTitle>*@

<div id="title">Squid League 4 Viewer</div>
<div class="textContent">
    <h2>Upcomming Matches</h2>
</div>
@if (Matches.IsNull())
{
    <div class="textContent"><p><em>Loading...</em></p></div>
}
else if (Matches.Count() == 0)
{
    <div class="textContent"><p><h3>There are no matches scheduled yet for this week</h3></p></div>
}
else
{
    foreach (var dayOfMatches in Matches.Where(y => y.Match.MatchDate != null).GroupBy(x => ((DateTime)x.Match.MatchDate).ToShortDateString()))
    {
        <center><h3>@string.Format("{0}", ((DateTime)dayOfMatches.ElementAt(0).Match.MatchDate).ToShortDateString())</h3></center>
        foreach (var match in dayOfMatches)
        {
            <div class="upcommingMatchCardContainer">
                <div class="upcommingMatchCard">
                    <h4>@string.Format("{0} vs. {1}", match.HomeTeam.TeamName, match.AwayTeam.TeamName)</h4>
                    <p>@string.Format("{0} GMT on", ((DateTime)match.Match.MatchDate).ToLocalTime().ToShortTimeString())</p>
                    @if (!string.IsNullOrEmpty(match.Match.MatchVodLink))
                    {
                        <a href=@string.Format("{0}", match.Match.MatchVodLink) target="_blank">
                            <img src=@string.Format("Images/brandLogos/{0}.svg", VodType.GetVodLinkType(match.Match.MatchVodLink)) height=40px width=40px>
                        </a>
                    }
                </div>
            </div>
        }
    }
}

@code {
    private IEnumerable<UpcommingMatch> Matches;

    protected override async Task OnInitializedAsync()
    {
        Matches = homeService.GetUpcommingMatches().OrderBy(x => x.Match.MatchDate);
    }
}
