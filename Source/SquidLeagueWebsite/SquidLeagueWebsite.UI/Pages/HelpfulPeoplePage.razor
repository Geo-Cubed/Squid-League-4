@page "/helpfulPeople"

@using SquidLeagueWebsite.Models
@using SquidLeagueWebsite.UI.Data
@using SquidLeagueWebsite.Utilities
@inject HelpfulPeopleService peopleService

<link href="~/css/helpfulPeople.css" rel="stylesheet" />
<div id="title">Special Thanks</div>
@if (this.people == null)
{
    <div class="textContent">
        <h3>Loading...</h3>
    </div>
}
else if (this.people.Count() == 0)
{
    <div class="textContent">
        <h3>There are no people to display</h3>
    </div>
}
else
{
    foreach (var personList in this.splitPeople)
    {
        <div class="cardContainer">
            <div class="people">
                @foreach (var person in personList)
                {
                    <div class="card">
                        <img class="cardImg" src="@person.PicturePath">
                        <div class="helpfulPeopleContainer">
                            <h5><b>@person.UserName</b></h5>
                            <p>@person.Description</p>
                            @if (person.Twitter != string.Empty)
                            {
                                <a href="@person.Twitter" target="_blank">
                                    <img src="Images/brandLogos/Twitter/Twitter Logos/Twitter_Logo_Blue/Twitter_Logo_Blue.svg" height=40px width=40px>
                                </a>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
    }
}

@code{
    private IEnumerable<HelpfulPeople> people;

    private List<List<HelpfulPeople>> splitPeople;

    protected override async Task OnInitializedAsync()
    {
        this.people = peopleService.GetAllHelpfulPeople();
        this.SplitUpPeople();
    }

    protected void SplitUpPeople()
    {
        this.splitPeople = people.SplitList(3);
    }
}
